// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.uca.iw.onlinejob.web;

import es.uca.iw.onlinejob.domain.Perfil;
import es.uca.iw.onlinejob.domain.Titulo;
import es.uca.iw.onlinejob.domain.Trabajo;
import es.uca.iw.onlinejob.web.PerfilController;
import java.util.Set;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect PerfilController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByTitulos", "form" }, method = RequestMethod.GET)
    public String PerfilController.findPerfilsByTitulosForm(Model uiModel) {
        uiModel.addAttribute("tituloes", Titulo.findAllTituloes());
        return "perfils/findPerfilsByTitulos";
    }
    
    @RequestMapping(params = "find=ByTitulos", method = RequestMethod.GET)
    public String PerfilController.findPerfilsByTitulos(@RequestParam("titulos") Set<Titulo> titulos, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("perfils", Perfil.findPerfilsByTitulos(titulos, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Perfil.countFindPerfilsByTitulos(titulos) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("perfils", Perfil.findPerfilsByTitulos(titulos, sortFieldName, sortOrder).getResultList());
        }
        return "perfils/list";
    }
    
    @RequestMapping(params = { "find=ByTrabajos", "form" }, method = RequestMethod.GET)
    public String PerfilController.findPerfilsByTrabajosForm(Model uiModel) {
        uiModel.addAttribute("trabajoes", Trabajo.findAllTrabajoes());
        return "perfils/findPerfilsByTrabajos";
    }
    
    @RequestMapping(params = "find=ByTrabajos", method = RequestMethod.GET)
    public String PerfilController.findPerfilsByTrabajos(@RequestParam("trabajos") Set<Trabajo> trabajos, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("perfils", Perfil.findPerfilsByTrabajos(trabajos, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Perfil.countFindPerfilsByTrabajos(trabajos) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("perfils", Perfil.findPerfilsByTrabajos(trabajos, sortFieldName, sortOrder).getResultList());
        }
        return "perfils/list";
    }
    
}
