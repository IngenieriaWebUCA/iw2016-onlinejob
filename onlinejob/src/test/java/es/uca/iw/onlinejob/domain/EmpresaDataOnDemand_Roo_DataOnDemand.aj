// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.uca.iw.onlinejob.domain;

import es.uca.iw.onlinejob.domain.DireccionDataOnDemand;
import es.uca.iw.onlinejob.domain.Empresa;
import es.uca.iw.onlinejob.domain.EmpresaDataOnDemand;
import es.uca.iw.onlinejob.domain.OfertaTrabajoDataOnDemand;
import es.uca.iw.onlinejob.domain.UsuarioDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect EmpresaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: EmpresaDataOnDemand: @Component;
    
    private Random EmpresaDataOnDemand.rnd = new SecureRandom();
    
    private List<Empresa> EmpresaDataOnDemand.data;
    
    @Autowired
    DireccionDataOnDemand EmpresaDataOnDemand.direccionDataOnDemand;
    
    @Autowired
    OfertaTrabajoDataOnDemand EmpresaDataOnDemand.ofertaTrabajoDataOnDemand;
    
    @Autowired
    UsuarioDataOnDemand EmpresaDataOnDemand.usuarioDataOnDemand;
    
    public Empresa EmpresaDataOnDemand.getNewTransientEmpresa(int index) {
        Empresa obj = new Empresa();
        setActividad_profesional(obj, index);
        setCif(obj, index);
        setEmail(obj, index);
        setNombre(obj, index);
        setNum_empleados(obj, index);
        setTelefono(obj, index);
        return obj;
    }
    
    public void EmpresaDataOnDemand.setActividad_profesional(Empresa obj, int index) {
        String actividad_profesional = "actividad_profesional_" + index;
        if (actividad_profesional.length() > 256) {
            actividad_profesional = actividad_profesional.substring(0, 256);
        }
        obj.setActividad_profesional(actividad_profesional);
    }
    
    public void EmpresaDataOnDemand.setCif(Empresa obj, int index) {
        String cif = "cifxxxx_" + index;
        if (cif.length() > 9) {
            cif = cif.substring(0, 9);
        }
        obj.setCif(cif);
    }
    
    public void EmpresaDataOnDemand.setEmail(Empresa obj, int index) {
        String email = "foo" + index + "@bar.com";
        if (email.length() > 32) {
            email = email.substring(0, 32);
        }
        obj.setEmail(email);
    }
    
    public void EmpresaDataOnDemand.setNombre(Empresa obj, int index) {
        String nombre = "nombre_" + index;
        if (nombre.length() > 32) {
            nombre = nombre.substring(0, 32);
        }
        obj.setNombre(nombre);
    }
    
    public void EmpresaDataOnDemand.setNum_empleados(Empresa obj, int index) {
        Float num_empleados = new Integer(index).floatValue();
        obj.setNum_empleados(num_empleados);
    }
    
    public void EmpresaDataOnDemand.setTelefono(Empresa obj, int index) {
        String telefono = "telefono_" + index;
        obj.setTelefono(telefono);
    }
    
    public Empresa EmpresaDataOnDemand.getSpecificEmpresa(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Empresa obj = data.get(index);
        Long id = obj.getId();
        return Empresa.findEmpresa(id);
    }
    
    public Empresa EmpresaDataOnDemand.getRandomEmpresa() {
        init();
        Empresa obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Empresa.findEmpresa(id);
    }
    
    public boolean EmpresaDataOnDemand.modifyEmpresa(Empresa obj) {
        return false;
    }
    
    public void EmpresaDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Empresa.findEmpresaEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Empresa' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Empresa>();
        for (int i = 0; i < 10; i++) {
            Empresa obj = getNewTransientEmpresa(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
