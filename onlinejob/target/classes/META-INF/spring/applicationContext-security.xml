<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
   <!-- HTTP security configurations -->
   <http auto-config="true" use-expressions="true">
       <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" />
       <logout logout-url="/resources/j_spring_security_logout" />
       <!-- Configure these elements to secure URIs in your application -->
       <intercept-url pattern="/resources/.*" access="permitAll" />
	   <intercept-url pattern="\A/demandantes\?form.*\Z" access="permitAll" />
	   <intercept-url pattern="\A/login.*\Z" access="permitAll" />
	   <intercept-url pattern="\A/usuarios\?form.*\Z" access="permitAll" />
	   <intercept-url pattern="/.*\Z" access="hasAnyRole('ROLE_ADMIN', 'ROLE_INVITADO')"/> 
   </http>
   	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
	<!-- SHA-256 values can be produced using 'echo -n your_desired_password | sha256sum' (using normal *nix environments) -->
	<authentication-provider>
	<jdbc-user-service data-source-ref="dataSource"
	users-by-username-query="SELECT username, password, enabled FROM usuario WHERE username=?"
	authorities-by-username-query="SELECT username, rol FROM usuario WHERE username=?" />
	</authentication-provider>
	</authentication-manager>
</beans:beans>

